body {
  font-family: Arial, sans-serif;
  background-color: #f4f4f4;
  margin: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
}

.container {
  background-color: white;
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  text-align: center;
  width: 90%;
  max-width: 400px;
}

h1 {
  color: #333;
  margin-bottom: 10px;
}

p {
  color: #666;
  margin-bottom: 15px;
}

.input-group {
  display: flex;
  gap: 10px;
  margin-bottom: 15px;
}

input {
  flex: 1;
  padding: 10px;
  border: 1px solid #ddd;
  border-radius: 4px;
}

button {
  padding: 10px 20px;
  background-color: #28a745;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

button:hover {
  background-color: #218838;
}

.result {
  padding: 10px;
  border-radius: 4px;
  display: none;
}

.result.success {
  background-color: #d4edda;
  color: #155724;
  border: 1px solid #c3e6cb;
  display: block;
}

.result.error {
  background-color: #f8d7da;
  color: #721c24;
  border: 1px solid #f5c6cb;
  display: block;
}



<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Airdrop Allocation Checker</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>
  <div class="container">
    <h1>Airdrop Allocation Checker</h1>
    <p>Enter your username to check your airdrop allocation.</p>
    <div class="input-group">
      <input type="text" id="addressInput" placeholder="Enter your username (e.g., @username)">
      <button onclick="checkAllocation()">Check Allocation</button>
    </div>
    <div id="result" class="result"></div>
  </div>
  <script src="script.js"></script>
</body>
</html>


const mockAllocations = [ { address: "@thedaks_png", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@spikynads", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@mondanabaddies", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@overnads", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@0xBlueLou", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@0xmazzys", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@0xRekkkt", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@Thejusjaya234", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@lazy_santo", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@MiraXMeta", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@AldenCrypto03", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@lily_lils0", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@deja_Vooooo", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@RiagoARibeiro", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@itzr0nin", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@solhitman", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@angry_olla", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@moxley_25", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@ademola_sa34941", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@NotBexel", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@noob_nad", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@RagingBull_96", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@SEBSIXCHAINS", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@Josh_kind6", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@Yusuphh01", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@OLAWALE_WEB3", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@SatishMeena90", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@uncle_imad", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@Sar746980041", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@umairullah6713", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@Tarun775288", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@moon_rider0951", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@Neerajmeena1787", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@Tapan_2014", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@durgesh609", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@abhigupta02003", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@Littleprin45060", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@ONEMANN86", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@Tapan19955", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@DuchaNguyenpham", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@dekschain", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 }, { address: "@dylannads", category: "Giveaway Participant", amount: Math.floor(Math.random() * (1600 - 800 + 1)) + 800 } ]; function checkAllocation() { const addressInput = document.getElementById('addressInput').value.trim(); const resultDiv = document.getElementById('result'); if (!addressInput) { resultDiv.className = 'result error'; resultDiv.innerText = 'Please enter a username!'; return; } const allocation = mockAllocations.find(alloc => alloc.address.toLowerCase() === addressInput.toLowerCase()); if (allocation) { resultDiv.className = 'result success'; resultDiv.innerText = `Allocation: ${allocation.amount} tokens (Category: ${allocation.category})`; } else { resultDiv.className = 'result error'; resultDiv.innerText = 'No allocation found for this username. (Not Eligible: 0 tokens)'; } }
